'use client';
import { useState } from "react";
import { signIn } from "next-auth/react";
import { useGeolocation } from "../hooks/useGeolocation";

export default function LoginForm() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  // const { coords } = useGeolocation();

  const handleLogin = async () => {
    // if (!coords) return; // üîπ –ë–µ–∑ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏ –Ω–µ –ª–æ–≥–∏–Ω–∏–º
    await signIn("credentials", {
      username,
      password,
      callbackUrl: "/",
      // lat: coords.lat,
      // lng: coords.lng,
    });
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center gap-4">
      <input
        placeholder="–õ–æ–≥–∏–Ω"
        className="border px-4 py-2"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />
      <input
        type="password"
        placeholder="–ü–∞—Ä–æ–ª—å"
        className="border px-4 py-2"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
      />

      {/* <button
        onClick={handleLogin}
        // disabled={!coords} // üîπ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        className={`px-6 py-2 rounded text-white
           ${
          coords ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-400 cursor-not-allowed"
        }
        `}
      >
        –í–æ–π—Ç–∏
      </button> */}
          <button
        onClick={handleLogin}
        // disabled={!coords} // üîπ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        className={`px-6 py-2 rounded text-white bg-blue-600 hover:bg-blue-700`}
           
      >
        –í–æ–π—Ç–∏
      </button>

      {/* {!coords && (
        <p className="text-red-600 text-sm">
          –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏
        </p>
      )} */}
    </div>
  );
}
